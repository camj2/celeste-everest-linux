#!/bin/sh

API=https://dev.azure.com/EverestAPI/Everest/_apis/build/builds
API_VERSION=7.1

TMP="${XDG_RUNTIME_DIR:-/tmp}/celeste-everest-linux"

env_check() {
  if ! command -v jq > /dev/null; then
    die 127 "jq not installed"
  fi

  if [ ! -x Celeste ]; then
    die 1 "executable 'Celeste': not found"
  fi

  if [ -e "$TMP" ]; then
    die 1 "directory '$TMP': already exists"
  fi
}

azure_parse() {
  # https://github.com/leo60228/everinst/blob/master/src/updater.rs
  curl -s "${API}?api-version=${API_VERSION}" |
    jq -r '.value[] | select(
        (.status == "completed" and .result == "succeeded") and
        (.reason == "manual" or .reason == "individualCI")
      ) | (.id | tostring) + " " + (.sourceBranch | sub("refs/heads/"; ""))'
}

everest_download() {
  curl -sf -o "$TMP/everest.zip" \
    "${API}/${1}/artifacts?artifactName=main&api-version=${API_VERSION}&%24format=zip" || return

  unzip -q -d "$TMP/everest" "$TMP/everest.zip"

  rsync -aAX --checksum "$TMP/everest/main/" ./
}

everest_install() {
  chmod +x MiniInstaller-linux

  ./MiniInstaller-linux || return

  if [ -x Celeste ] && [ ! -e Celeste.bin.x86_64 ]; then
    ln -s Celeste Celeste.bin.x86_64
  fi
}

everest_install_branch() {
  version=$(azure_parse | awk -v branch="$1" '$2 == branch {print $1; exit}')

  if [ -z "$version" ]; then
    die 1 "parse failed"
  fi

  trap 'rm -rf "$TMP"; exit 1' HUP INT TERM
  install -d -m 700 "$TMP"

  everest_download "$version"
  ret=$?

  rm -rf "$TMP"
  trap - HUP INT TERM

  if [ "$ret" -ne 0 ]; then
    die 1 "download failed"
  fi

  if ! everest_install; then
    die 1 "install failed"
  fi
}

die() {
  printf "celeste-everest-linux: %s\n" "$2" 1>&2

  exit "$1"
}

RST='\033[0;00m'
GRN='\033[0;32m'
YLW='\033[0;33m'

usage() {
  printf "%b\n" "${YLW}USAGE${RST}:"
  printf "%s\n" "    celeste-everest-linux [BRANCH]"
  printf "\n"
  printf "%b\n" "${YLW}BRANCHES${RST}:"
  printf "%b\n" "    ${GRN}s${RST}, ${GRN}stable${RST}"
  printf "%b\n" "    ${GRN}b${RST}, ${GRN}beta${RST}"
  printf "%b\n" "    ${GRN}d${RST}, ${GRN}dev${RST}"
}

case $1 in
  s | stable)
    env_check
    everest_install_branch stable
    ;;

  b | beta)
    env_check
    everest_install_branch beta
    ;;

  d | dev)
    env_check
    everest_install_branch dev
    ;;

  h | -h | help | --help | "")
    usage
    ;;

  *)
    die 1 "unrecognized branch '$1'"
    ;;
esac
